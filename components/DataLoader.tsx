'use client';

import { useState, useEffect } from 'react';
import Header from './Header';
import HeroSection from './HeroSection';
import ReviewsSection from './ReviewsSection';
import Footer from './Footer';

interface ApiData {
  mainData: any;
  navigationData: any;
  reviewsData: any;
}

export default function DataLoader() {
  const [data, setData] = useState<ApiData>({
    mainData: null,
    navigationData: null,
    reviewsData: null,
  });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    async function fetchData() {
      try {
        setLoading(true);
        setError(null);

        const [mainRes, navigationRes, reviewsRes] = await Promise.all([
          fetch('https://revmo-api.netlify.app/api/main', {
            method: 'GET',
            headers: {
              Accept: 'application/json',
            },
          }),
          fetch('https://revmo-api.netlify.app/api/navigation', {
            method: 'GET',
            headers: {
              Accept: 'application/json',
            },
          }),
          fetch('https://revmo-api.netlify.app/api/slider', {
            method: 'GET',
            headers: {
              Accept: 'application/json',
            },
          }),
        ]);

        if (!mainRes.ok || !navigationRes.ok || !reviewsRes.ok) {
          throw new Error('One or more API calls failed');
        }

        const [mainData, navigationData, reviewsData] = await Promise.all([
          mainRes.json(),
          navigationRes.json(),
          reviewsRes.json(),
        ]);

        setData({ mainData, navigationData, reviewsData });
      } catch (error) {
        // Use fallback data instead of showing error
        const fallbackData = {
          mainData: {
            title: '–í–∞—à –ø–æ–º–æ—â–Ω–∏–∫',
            subtitle: '–≤ –±–æ—Ä—å–±–µ —Å —Ä–µ–≤–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è–º–∏',
            videoUrl:
              'https://bcdless-s3-api.biocad.ru/shared/revmo/landing/video/Block-1-hero/1080p/Block-1-hero_1080p.webm',
            buttons: {
              ios: { enabled: true, label: '–°–∫–∞—á–∞—Ç—å –¥–ª—è iOS' },
              android: { enabled: true, label: '–°–∫–∞—á–∞—Ç—å –¥–ª—è Android' },
              apk: { enabled: true, label: '–°–∫–∞—á–∞—Ç—å APK' },
            },
            socials: {
              vk: { enabled: true, url: 'https://vk.com/example' },
              telegram: { enabled: true, url: 'https://t.me/example' },
              dzen: { enabled: true, url: 'https://dzen.ru/example' },
              vkVideo: { enabled: true, url: 'https://vk.com/video/example' },
            },
          },
          navigationData: {
            logo: { text: 'Revmo.info app', link: '/' },
            menu: [
              { id: 1, label: '–ù–∞–∑–∞–¥ –∫ —Å–∞–π—Ç—É', link: '/' },
              { id: 2, label: '–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏', link: '/' },
              { id: 3, label: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', link: '/' },
              { id: 4, label: '–û–±—â–µ–Ω–∏–µ', link: '/' },
              { id: 5, label: '–û—Ç–∑—ã–≤—ã', link: '/' },
            ],
          },
          reviewsData: {
            enabled: true,
            title: '–û—Ç–∑—ã–≤—ã –æ—Ç –≤—Ä–∞—á–µ–π –∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤',
            description: '–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ revmo.info app',
            count: 5,
            data: [
              {
                id: 1,
                photo: '',
                name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞',
                date: '28.09.2025',
                text: '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ–µ! –ü–æ–º–æ–≥–∞–µ—Ç –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞—Ö –∏ –∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º –≤—Ä–∞—á–∞–º! ‚ù§Ô∏è',
              },
              {
                id: 2,
                photo: '',
                name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
                date: '4.10.2025',
                text: '–û—Ç–ª–∏—á–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±—à–∏—Ä–Ω–∞—è, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π. –≠–∫–æ–Ω–æ–º–∏—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ä–∞–±–æ—Ç–µ.',
              },
              {
                id: 3,
                photo: '',
                name: '–°–≤–µ—Ç–ª–∞–Ω–∞',
                date: '1.11.2025',
                text: '–ü–æ–ª—å–∑—É—é—Å—å —É–∂–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤. –û—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è.',
              },
              {
                id: 4,
                photo: '',
                name: '–ï–≤–≥–µ–Ω–∏–π',
                date: '12.11.2025',
                text: '–ö–∞–∫ –≤—Ä–∞—á —Å –±–æ–ª—å—à–∏–º —Å—Ç–∞–∂–µ–º, –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —ç—Ç–æ –æ–¥–Ω–æ –∏–∑ –ª—É—á—à–∏—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –û—á–µ–Ω—å –ø–æ–º–æ–≥–∞–µ—Ç –≤ –ø—Ä–∞–∫—Ç–∏–∫–µ.',
              },
              {
                id: 5,
                photo: '',
                name: '–ê–Ω–Ω–∞',
                date: '15.11.2025',
                text: '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å—Ç–∞–ª–æ –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ –º–æ–µ–π —Ä–∞–±–æ—Ç–µ. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è, –ø–æ–∏—Å–∫ –±—ã—Å—Ç—Ä—ã–π –∏ —Ç–æ—á–Ω—ã–π.',
              },
            ],
          },
        };

        setData(fallbackData);
        setError(null); // Clear error since we're using fallback
      } finally {
        setLoading(false);
      }
    }

    fetchData();
  }, []);

  if (loading) {
    return (
      <div
        style={{
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          height: '100vh',
          flexDirection: 'column',
          gap: '20px',
        }}
      >
        <div>üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
        <div style={{ fontSize: '14px', color: '#666' }}>
          –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div
        style={{
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          height: '100vh',
          flexDirection: 'column',
          gap: '20px',
        }}
      >
        <div>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</div>
        <div style={{ fontSize: '14px', color: '#666' }}>{error}</div>
        <button
          onClick={() => window.location.reload()}
          style={{
            padding: '10px 20px',
            backgroundColor: '#0070f3',
            color: 'white',
            border: 'none',
            borderRadius: '5px',
            cursor: 'pointer',
          }}
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      </div>
    );
  }

  return (
    <>
      <Header data={data.navigationData} />
      <HeroSection data={data.mainData} />
      <ReviewsSection data={data.reviewsData} />
      <Footer socials={data.mainData?.socials} />
    </>
  );
}
